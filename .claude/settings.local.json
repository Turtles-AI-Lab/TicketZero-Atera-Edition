{
  "permissions": {
    "allow": [
      "Bash(pip install:*)",
      "Bash(python:*)",
      "Bash(explorer .)",
      "Bash(start .)",
      "Bash(./upload_to_ionos.bat)",
      "Bash(sftp:*)",
      "Bash(start:*)",
      "Bash(curl:*)",
      "Bash(./auto_upload.bat)",
      "Bash(node:*)",
      "Bash(npm install sqlite3 bcryptjs)",
      "Read(//c//**)",
      "WebSearch",
      "Bash(md docs)",
      "WebFetch(domain:jandraisolutions.net)",
      "Bash(ollama list:*)",
      "Bash(npm install)",
      "Read(//c/Users/James.Home/Desktop/AI_AGENTS_MAC_PRO/**)",
      "Read(//c/Users/James.Home/Desktop/**)",
      "Bash(mv:*)",
      "Bash(find:*)",
      "Read(//c/Users/James.Home/**)",
      "Bash(powershell:*)",
      "Bash(choco install:*)",
      "Bash(dir:*)",
      "Bash(sh)",
      "Bash(./deploy_to_railway.bat)",
      "Bash(railway up:*)",
      "Bash(railway link:*)",
      "Bash(railway service:*)",
      "Bash(railway deploy:*)",
      "Bash(railway projects:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git init:*)",
      "Bash(git config:*)",
      "Bash(mkdir:*)",
      "Bash(set PYTHONIOENCODING=utf-8)",
      "Bash(echo:*)",
      "Bash(./gemini-direct.bat)",
      "Bash(.gemini-direct.bat)",
      "WebFetch(domain:ai.google.dev)",
      "Bash(copy:*)",
      "Bash(./READY_TO_DEPLOY.bat)",
      "WebFetch(domain:gemini.google.com)",
      "Bash(timeout 60 sftp:*)",
      "Bash(grep:*)",
      "Bash(./auto_upload_demo.bat)",
      "Bash(nc:*)",
      "Bash(timeout 10 telnet jandraisolutions.net 22)",
      "Bash(./auto_upload_demo_v2_robust.bat)",
      "Bash(nmap:*)",
      "Bash(scp:*)",
      "Bash(./DEPLOY_LINKEDIN_READY.bat)",
      "Bash(where ftp)",
      "WebFetch(domain:savannahsforge-95x5vrpai2.live-website.com)",
      "Bash(railway login:*)",
      "Bash(timeout:*)",
      "Bash(cmd /c:*)",
      "Bash(cp:*)",
      "Bash(rm:*)",
      "Bash(move quick_4_ticket_test.py appstesting)",
      "Bash(move test_4_tickets_lmstudio.py appstesting)",
      "Bash(move test_escalation_workflow.py appstesting)",
      "Bash(move create_realtime_dialogue_pdf.py scriptspdf_generation)",
      "Bash(move create_simulated_flow_pdf.py scriptspdf_generation)",
      "Bash(move generate_lm_flow_pdf.py scriptspdf_generation)",
      "Bash(move quick_lm_flow_demo.py scriptsdemos)",
      "Bash(cat:*)",
      "Bash(tree:*)",
      "Bash(move test_admin_panel.py tests)",
      "Bash(rmdir:*)",
      "Bash(env)"
    ],
    "deny": [],
    "ask": []
  }
}